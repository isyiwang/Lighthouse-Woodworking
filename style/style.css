/*
*
*  Golden Grid System (1.01)	<http://goldengridsystem.com/>
*  by Joni Korpi 				<http://jonikorpi.com/>
*  licensed under MIT			<http://opensource.org/licenses/mit-license.php>
*
*/
/* HelpLess
*
*  @What is it:
*  HelpLess is a Helper Library for the brilliant LESS dynamic stylesheet language.
*  Read more about LESS: http://lesscss.org/
*  
*  I have tried to make HelpLess as all-encompasing as possible with support for dynamic
*  grids and page starter themes as well as all the css3 features I could think of.
*  Unlike other libraries, HelpLess has an invisible footprint until you call a mixin 
*  so if you import HelpLess but don't use it, it will not increase your compiled file size
*  
*  @thanks: 
*  Eric Meyer for his html reset - http://meyerweb.com/eric/tools/css/reset/
*  Necolas for his normalize - https://github.com/necolas/normalize.css
*
*  @How to use:
*  Import helpless.x.x.x.less into your main style.less file. 
*
*  @Author: 
*  m6tt: m6tt.com
*
*  @Reference:
*  ------------------------------------------------------------------------------
*    BASICS                     =>    syntax
*  ------------------------------------------------------------------------------
*    - .reset                   =>    #hl.reset() - call outside of element
*    - .normalize               =>    #hl.normalize - call outside of element
*    - .clearfix                =>    #hl.clearfix()
*    - .centered                =>    #hl.centered(width)
*    - .border                  =>    #hl.border(color)
*    - .opacity                 =>    #hl.opacity(value)
*    - .border-radius           =>    #hl.round-all-corners(radius)
*    - .rounded-corners         =>    #hl.rounded-corners(topLeft, topRight, bottomRight, bottomLeft)
*    - .transition              =>    #hl.transition(property, duration, ease, delay)
*    - .drop-shadow             =>    #hl.drop-shadow(x, y, blur, color)
*    - .inner-shadow            =>    #hl.inner-shadow(x, y, blur, color)
*    - .text-shadow             =>    #hl.text-shadow(x, y, blur, color)
*    - .background-gradient     =>    #hl.background-gradient(colorFrom, colorTo, fallbackColor, fallbackImageUrl)
*    - .scale                   =>    #hl.scale(amount)
*    - .scaleX                  =>    #hl.scaleX(amount)
*    - .scaleY                  =>    #hl.scaleY(amount)
*    - .rotate                  =>    #hl.rotate(degrees)
*    - .rotateX                 =>    #hl.rotateX(degrees)
*    - .rotateY                 =>    #hl.rotateY(degrees)
*    - .skew                    =>    #hl.skew(angleX, angleY)
*    - .skewX                   =>    #hl.skewX(angleX)
*    - .skewY                   =>    #hl.skewY(angleY)
*    - .translate               =>    #hl.translate(x, y)
*    - .translateX              =>    #hl.translateX(x)
*    - .translateY              =>    #hl.translateY(y)
*    - .matrix                  =>    #hl.matrix(n, n, n, n, n, n)
*    - .box-sixing              =>    #hl.box-sizing(box-type)
*
*  ------------------------------------------------------------------------------
*    GRID                       =>    syntax
*  ------------------------------------------------------------------------------
*    - .grid                    =>    namespace, do not call directly, use .make or one of the predefined grid makers
*     - .make                   =>    #hl.grid.make(width, colNumber, gutterWidth)
*     - .1200                   =>    #hl.grid.1200();
*     - .1120                   =>    #hl.grid.1120();
*     - .1040                   =>    #hl.grid.1040();
*     - .960                    =>    #hl.grid.960();
*     - .880                    =>    #hl.grid.880();
*     - .800                    =>    #hl.grid.800();
*     - .720                    =>    #hl.grid.720();
*     - .640                    =>    #hl.grid.640();
*     - .560                    =>    #hl.grid.560();
*     - .480                    =>    #hl.grid.480();
*     - .400                    =>    #hl.grid.400();
*     - .320                    =>    #hl.grid.320();
*     - .240                    =>    #hl.grid.240();
*     - .row                    =>    #hl.grid.row();
*     - .col                    =>    #hl.grid.col(colSpan);
*
*  ---------------------------------------
*    TYPOGRAPHY
*  ---------------------------------------
*    - .typo                    =>    namespace, do not call directly
*     - .serif                  =>    #hl.typo.serif(webfont-name-optional);
*     - .sans                   =>    #hl.typo.sans(webfont-name-optional);
*     - .columns                =>    #hl.typo.columns(count, gap)
* 
*  ---------------------------------------
*    IMAGES
*  ---------------------------------------
*    - .img                     =>    namespace, do not call directly
*     - .responsive             =>    #hl.img.responsive();
*     - .framed                 =>    #hl.img.framed();

*  ---------------------------------------
*    USER INTERFACE
*  ---------------------------------------
*    - .ui                      =>    namespace, do not call directly
*     - .themes                 =>    namespace, do not call directly
*      - .light                 =>    #hl.ui.themes.light(); - call within <body> element
*      - .dark                  =>    #hl.ui.themes.dark(); - call within <body> element
*     - .list                   =>    namespace, do not call directly
*      - .subtle                =>    #hl.list.subtle(); - call within <ul> element
*      - .horizontal            =>    #hl.list.horizontal(); - call within <ul> element
*
*/
#hl {
  /************************************
  * Meyer Reset
  * http://meyerweb.com/eric/tools/css/reset/
  ************************************/

  /************************************
  * Normalize by necolas
  * https://github.com/necolas/normalize.css
  ************************************/

  /************************************
  * Clearfix
  *
  * what?: Contains floats, for more info see h5bp.com/q.
  *        Removes the need to add .clearfix as a class
  *        to your elements.
  *
  ************************************/

  /************************************
  * Centered
  *
  * @what?: Center your object with an
  *         automatic margin
  *
  * @params: width,      default = 960px
  *
  ************************************/

  /************************************
  * Border
  *
  * @what?: Add a 1px solid border
  *        super quick.
  *
  * @params: colour,      default = #000
  *
  ************************************/

  /************************************
  * Opacity
  *
  * @what?: Add opacity to an HTML element that works
  *         in all browsers including ie6+
  *
  * @params: value,      default = .5
  *
  ************************************/

  /************************************
  * Round all corners
  *
  * @what?: Rounds every corner equally
  *
  * @params: radius,      default = 5px
  *
  ************************************/

  /************************************
  * Rounded corners
  *
  * @what?: Round each corner individually
  *
  * @params: topLeft,     default = 5px
  *          topRight,    default = 5px
  *          bottomRight, default = 5px
  *          bottomLeft,  default = 5px
  *
  ************************************/

  /************************************
  * Transition
  *
  * @what?: Defines a CSS3 transition
  *
  * @params: property,    default = all
  *          duration,    default = .5s
  *          ease,        default = linear
  *          delay,       default = .0s
  *
  ************************************/

  /************************************
  * Drop shadow
  *
  * @what?: Adds an outer shadow to the
  *         html element. To add a shadow
  *         to text use #hl.text-shadow(...)
  *
  * @params: x,           default = 0px
  *          y,           default = 1px
  *          blur,        default = 1px
  *          colour,      default = rgba(0, 0, 0, .6)
  *
  ************************************/

  /************************************
  * Inner shadow
  *
  * @what: Adds an inner shadow to the
  *        html element.
  *
  * @params: x,           default = 0px
  *          y,           default = 1px
  *          blur,        default = 1px
  *          colour,      default = rgba(0, 0, 0, .6)
  *
  ************************************/

  /************************************
  * Text shadow
  *
  * @what?: Adds an outer shadow to text
  *
  * @params: x,           default = 1px
  *          y,           default = 1px
  *          blur,        default = 1px
  *          colour,      default = rgba(0, 0, 0, .6)
  *
  ************************************/

  /************************************
  * Background Gradient
  *
  * @what?: Adds a background gradient to
  *         an HTML element
  *
  * @params: colourFrom,       default = #bbb
  *          colourTo,         default = #f1f1f1
  *          fallbackColour,   default = #f1f1f1
  *          fallbackImageUrl, default = ''
  *
  ************************************/

  /************************************
  * Scale
  *
  * @what?: Defines a 2D scale transformation
  *
  * @params: amount,      default = 1
  *
  ************************************/

  /************************************
  * ScaleX
  *
  * @what?: Defines a scale transformation
  *         by giving a value for the X-axis
  *
  * @params: x,           default = 1
  *
  ************************************/

  /************************************
  * ScaleY
  *
  * @what?: Defines a scale transformation
  *         by giving a value for the Y-axis
  *
  * @params: y,           default = 1
  *
  ************************************/

  /************************************
  * Rotate
  *
  * @what?: Defines a 2D rotation, the angle
  *         is specified in the parameter
  *
  * @params: degrees,     default = 90deg
  *
  ************************************/

  /************************************
  * RotateX
  *
  * @what?: Defines a 3D rotation along the X-axis
  *
  * @params: degrees,     default = 90deg
  *
  ************************************/

  /************************************
  * RotateY
  *
  * @what?: Defines a 3D rotation along the Y-axis
  *
  * @params: degrees,     default = 90deg
  *
  ************************************/

  /************************************
  * Skew
  *
  * @what?: Defines a 2D skew transformation
  *         along the X- and the Y-axis
  *
  * @params: angleX,      default = 10deg
  *          angleY,      default = 10deg
  *
  ************************************/

  /************************************
  * SkewX
  *
  * @what?: Defines a 2D skew transformation
  *         along the X-axis
  *
  * @params: angleX,      default = 10deg
  *
  ************************************/

  /************************************
  * SkewY
  *
  * @what?: Defines a 2D skew transformation
  *         along the Y-axis
  *
  * @params: angleY,      default = 10deg
  *
  ************************************/

  /************************************
  * Translate
  *
  * @what?: Defines a 2D translation
  *
  * @params: x,           default = 10px
  *          y,           default = 10px
  *
  ************************************/

  /************************************
  * TranslateX
  *
  * @what?: Defines a translation, using
  *         only the value for the X-axis
  *
  * @params: x,           default = 10px
  *
  ************************************/

  /************************************
  * TranslateY
  *
  * @what?: Defines a translation, using
  *         only the value for the Y-axis
  *
  * @params: y,           default = 10px
  *
  ************************************/

  /************************************
  * Matrix
  *
  * @what?: Defines a 2D transformation,
  *         using a matrix of six values
  *
  * @params: n1,          default = 0
  *          n2,          default = 0
  *          n3,          default = 0
  *          n4,          default = 0
  *          n5,          default = 0
  *          n6,          default = 0
  *
  ************************************/

  /*
   * Box sizing
   */

  /************************************
  * Grid
  ************************************/

  /***********************************
  * TYPOGRAPHY
  ***********************************/

  /***********************************
  * IMAGE
  ***********************************/

  /***********************************
  * UI 
  ***********************************/

}
#hl .grid {
  /************************************
    * Make
    *
    * @what?: Defines the base variables needed
    *         for the HelpLess grid system.
    *
    * @params: @width,      default = 960
    *          @colnum,     default = 16
    *          @colgutter,  default = 10
    *
    ************************************/

  /************************************
    * 1200
    *
    * @what?: Predefined grid maker
    *
    ************************************/

  /************************************
    * 1120
    *
    * @what?: Predefined grid maker
    *
    ************************************/

  /************************************
    * 1040
    *
    * @what?: Predefined grid maker
    *
    ************************************/

  /************************************
    * 960
    *
    * @what?: Predefined grid maker
    *
    ************************************/

  /************************************
    * 880
    *
    * @what?: Predefined grid maker
    *
    ************************************/

  /************************************
    * 800
    *
    * @what?: Predefined grid maker
    *
    ************************************/

  /************************************
    * 720
    *
    * @what?: Predefined grid maker
    *
    ************************************/

  /************************************
    * 640
    *
    * @what?: Predefined grid maker
    *
    ************************************/

  /************************************
    * 560
    *
    * @what?: Predefined grid maker
    *
    ************************************/

  /************************************
    * 480
    *
    * @what?: Predefined grid maker
    *
    ************************************/

  /************************************
    * 400
    *
    * @what?: Predefined grid maker
    *
    ************************************/

  /************************************
    * 320
    *
    * @what?: Predefined grid maker
    *
    ************************************/

  /************************************
    * 240
    *
    * @what?: Predefined grid maker
    *
    ************************************/

  /************************************
    * Row
    *
    * @what?: Defines an element as a row.
    *         clears all clearfixes all columns
    *         directly inside.
    *
    ************************************/

  /************************************
    * Col
    *
    * @what?: Defines an element as a column.
    *         Sets the width depending on the
    *         supplied arguments and the width
    *         set in .grid()
    *
    * @params: @colSpan,  default = 1
    *
    ************************************/

}
#hl .typo {
  /************************************
    * Serif
    *
    * @what?: Quickly set your font family
    *         as a serif set
    *
    * @params: @webfont,  default = none
    *
    ************************************/

  /************************************
    * Serif
    *
    * @what?: Quickly set your font family
    *
    * @params: @webfont,  default = none
    *
    ************************************/

  /************************************
    * Columns
    *
    * @what?: Sets CSS3 columns within
    *         block of html text
    *
    * @params: count,       default = 1
    *          gap,         default = 10px
    *
    ************************************/

}
#hl .img {
  /************************************
    * Responsive
    *
    * @what?: Set image max-width: 100%
    *
    ************************************/

  /************************************
    * Framed
    *
    * @what?: Add a quick 10px frame to your image
    *
    ************************************/

}
#hl .ui {
  /***********************************
     * PREDEFINED THEMES
     ***********************************/

  /***********************************
     * LISTS
     ***********************************/

  /***********************************
     * FORMS
     ***********************************/

}
#hl .ui .themes {
  /***********************************
       * Theme: Light
       *
       * @what?: Quickly style the base elements
       *         of your page
       *
       ***********************************/

  /***********************************
       * Theme: Dark
       *
       * @what?: Quickly style the base elements
       *         of your page
       *
       ***********************************/

}
#hl .ui .list {
  /***********************************
       * Subtle
       *
       * @what?: Quickly removes the styling 
       *         from a list
       *
       ***********************************/

  /***********************************
       * Horizontal
       *
       * @what?: Creates a horizontal list, 
       *         useful for styling your site nav
       *
       ***********************************/

}
body,
div,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
th,
td,
article,
aside,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  margin: 0;
  padding: 0;
  border: 0;
}
html {
  height: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}
body {
  min-height: 100%;
  font-size: 100%;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section,
audio,
canvas,
video {
  display: block;
}
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}
b, strong {
  font-weight: bold;
}
abbr[title] {
  border-bottom: 1px dotted;
}
input,
textarea,
button,
select {
  margin: 0;
  font-size: 100%;
  line-height: normal;
  vertical-align: baseline;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  cursor: pointer;
  -webkit-appearance: button;
}
input[type="checkbox"], input[type="radio"] {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -o-box-sizing: border-box;
  -ms-box-sizing: border-box;
  box-sizing: border-box;
}
textarea {
  overflow: auto;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
figure {
  position: relative;
}
figure img,
figure object,
figure embed,
figure video {
  max-width: 100%;
  display: block;
}
img {
  border: 0;
  -ms-interpolation-mode: bicubic;
}
.font-13 {
  /* 13px / 18px */

  font-size: 0.8125em;
  line-height: 1.3846153846153846em;
}
.font-16, h3 {
  /* 16px / 24px */

  font-size: 1em;
  line-height: 1.5em;
}
.font-26, h2 {
  /* 26 / 36px */

  font-size: 1.625em;
  line-height: 1.3846153846153846em;
}
.font-42 {
  /* 42px / 48px */

  font-size: 2.625em;
  line-height: 1.1428571428571428em;
}
.font-68 {
  /* 68px / 72px */

  font-size: 4.25em;
  line-height: 1.0588235294117647em;
}
.font-110 {
  /* 110px / 120px */

  font-size: 6.875em;
  line-height: 1.0909090909090908em;
}
@font-face {
  font-family: roboto-bold;
  src: url('../typography/Roboto-Bold.ttf');
}
@font-face {
  font-family: garogier;
  src: url('../typography/Garogier.otf');
}
@font-face {
  font-family: serifbeta;
  src: url('../typography/Serif72Beta-Regular.otf');
}
@font-face {
  font-family: serifbeta-italic;
  src: url('../typography/Serif72Beta-Italic.otf');
}
/*
*
*  Four-column grid active
*  ----------------------------------------
*  Margin   | #  1   2   3   4   |   Margin
*  5.55555% | %  25  50  75  100 | 5.55555%
*
*/
body {
  /* 16px / 24px */

  font-size: 1em;
  line-height: 1.5em;
  background: #a18d72;
  font-family: serifbeta, serif;
}
.ie body {
  width: 40em;
  margin: 0 auto;
  font-size: 1.0625em;
}
header, #main {
  margin: 0 5.555555555555555%;
  zoom: 1;
  color: #ffffff;
}
header:before, #main:before {
  content: '';
  display: block;
}
header:after, #main:after {
  content: '';
  display: table;
  clear: both;
}
h1,
nav,
nav ul,
nav ul li,
#main,
h2,
button#request,
#calendar,
#content,
#sidebar,
figure,
article,
div,
.img {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
article {
  padding: 0 1.5em;
  text-align: left;
}
p {
  margin-bottom: 1.5em;
  letter-spacing: 1px;
}
div#title {
  float: left;
  zoom: 1;
  padding: 3.25em;
  background: #870000;
  border: 1px solid #e2cb92;
  border-top: none;
}
div#title:before {
  content: '';
  display: block;
}
div#title:after {
  content: '';
  display: table;
  clear: both;
}
h1#lighthouse {
  font-family: garogier;
  text-transform: uppercase;
  color: #ffffff;
  text-align: center;
  font-size: 3em;
}
h1#woodworking {
  font-family: serifbeta-italic;
  text-transform: lowercase;
  color: #e2cb92;
  text-align: right;
  font-size: 1.5em;
  padding-top: 0.5em;
}
nav {
  clear: both;
}
nav ul {
  text-align: center;
}
nav ul li {
  list-style: none;
  font-family: serifbeta-italic;
  text-transform: lowercase;
  text-shadow: 1px 1px 5px #555;
  /* 26 / 36px */

  font-size: 1.625em;
  line-height: 1.3846153846153846em;
}
nav ul li a {
  color: #fff;
  text-decoration: none;
}
nav ul li a:hover, nav ul li a.current {
  color: #e2cb92;
}
h2 {
  /* 26 / 36px */

  font-size: 1.625em;
  line-height: 1.3846153846153846em;
  margin: 1.3846153846153846em 0 0;
  text-align: left;
  font-weight: normal;
  font-family: garogier;
  letter-spacing: 1px;
}
#main {
  zoom: 1;
  background: #291c1c;
  border: 1px solid #e2cb92;
  border-bottom: none;
}
#main:before {
  content: '';
  display: block;
}
#main:after {
  content: '';
  display: table;
  clear: both;
}
button#request {
  width: 75%;
  font-family: serifbeta-italic;
  color: white;
  background: green;
}
#request-button {
  text-align: center;
}
#calendar {
  border: none;
  height: 500px;
  width: 100%;
}
h3 {
  margin: 1.5em 0 1.5em;
}
figure {
  height: 100%;
}
#ron {
  background: url("../images/ron.jpg") no-repeat;
}
#ron2 {
  background: url("../images/ron.jpg") no-repeat;
  height: 50%;
}
.img {
  background-size: contain;
  height: 100%;
  max-width: 100%;
  margin: 0 1.5em;
}
@media screen and (min-width: 48em) {
  body {
    font-size: 1.0625em;
  }
  h1#title {
    /* 42px / 48px */
  
    font-size: 2.625em;
    line-height: 1.1428571428571428em;
    padding: 0px 0.38095238095238093em;
  }
  header nav ul li {
    display: inline;
    padding: 0px 0.6153846153846154em;
  }
  #content {
    zoom: 1;
    float: left;
    width: 50%;
  }
  #content:before {
    content: '';
    display: block;
  }
  #content:after {
    content: '';
    display: table;
    clear: both;
  }
  #sidebar {
    zoom: 1;
    float: right;
    width: 50%;
  }
  #sidebar:before {
    content: '';
    display: block;
  }
  #sidebar:after {
    content: '';
    display: table;
    clear: both;
  }
  button#request {
    width: 50%;
  }
}
@media screen and (min-width: 62em) {
  body {
    font-size: 1em;
  }
  header {
    margin: 0 5.555555555555555% 0;
  }
  h1#title {
    float: left;
    width: 62.5%;
    margin: 0;
    text-align: left;
    /* 42px / 48px */
  
    font-size: 2.625em;
    line-height: 1.1428571428571428em;
  }
  div#title {
    height: 10.5em;
  }
  header nav {
    float: right;
    width: 100%;
  }
  header nav ul {
    text-align: right;
  }
  header nav ul li {
    line-height: 1.8461538461538463em;
  }
  #content {
    float: left;
    width: 75%;
  }
  #sidebar {
    float: right;
    width: 25%;
  }
  #content article {
    position: relative;
    width: 50%;
  }
  #content article:nth-of-type(2n) {
    margin-left: 50%;
  }
  #content article figure {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    right: -100%;
  }
  #content article:nth-of-type(2n) figure {
    right: auto;
    left: -100%;
  }
}
/*
*  Simple elastic gutters
*  Note: box-sizing will not work in IE6-8

.wrapper {
	padding: 0 (@line-height / 2) / @em;
	.box-sizing(border-box);
}
*/